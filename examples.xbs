#>
XBS Examples
<#

#Variable Declarations

set Name = "Hello, world!",
	Age = 18;
	
#Functions

func Add(Number1,Number2){
	send Number1 + Number2;
}

#Classes

class Animal {
	private func construct(self,Name="Animal"){
		self.Name = Name;
	}
	private undefined Name
	func GetName(self){
		send self.Name;
	}
}

class Dog extends Animal {
	private func construct(self,Name){
		super(Name);
	}
	func Bark(self){
		log(self.Name+" barks!");
	}
}

set MyDog = new Dog("Spots");
MyDog::Bark();
log(MyDog::GetName(), MyDog.Name);

# Factorials Function (Compressed)

func Factorial(_0)send((_0=1.._0),<|{_1}(*_0[1:?_0])_0[0]*=_1,_0[0]);
log(Factorial(4));

# Range Expansion

const Tokens={comma=",",sub="-"},Numbers="0123456789".split("");func GetToken(Value){each Tokens as k,v if(Value==v)send k;send Value}func Tokenize(Code){set Tokens=[],Split=Code.split("");each Split as k,v Tokens.push(GetToken(v));send Tokens}func IsNumeric(x) send Numbers.includes(x);func ApplyRange(Range,Min,Max) each Min..Max as k,v Range.push(v);func Parse(Tokens){set Result=[],Token="";func Write(){if(?Token>0)Result.push(Token);Token=""}each Tokens as k,v{if(v=="comma"){Write();Token+=v;Write()}elif(v=="sub"){Write();Token+=v;Write()}elif(IsNumeric(v))Token+=v;else error("Unexpected "+v)}Write();send Result}func RangeExpansion(String){set Range=[],Tokens=Parse(Tokenize(String)),i=0;func next(){set t=Tokens[i];if(t=="sub"){i++;send-next();}else send toint(t)}while(i<?Tokens){set t=Tokens[i],v=next();i++;if(Tokens[i]=="sub"){i++;ApplyRange(Range,v,next());i++}else Range.push(v);if(Tokens[i]=="comma"){i++;continue}break}send Range}

set r = RangeExpansion("-6,-3--1,3-5,7-11,14,15,17-20");
log(r);

# Request Class

func __assert(a,b)a&error(b);
class Request {
	private undefined XML
	private method construct(Type="GET",URL,Callback){
		__assert(!["post","get"].includes(tostring(Type).toLowerCase()),"Expected GET or POST for RequestType");
		__assert(!URL,"Expected URL for Request");
		self.XML=new window.XMLHttpRequest();
		self.XML.onreadystatechange=func()
			if(self.XML.readyState==self.XML.DONE&Callback&type(Callback)=="function")
				Callback(self.XML.response);
		self.XML.open(Type,URL);
	}
	method SetHeaders(Headers={})
		each Headers as k,v
			self.XML.setRequestHeader(k,v);
	method Send(Data)
		self.XML.send(Data);
}

set x=new Request("GET","https://fireyauto.github.io/SingleScript/imports/load.singlescript",log);
x::Send();
